<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	<!-- 위의 ViewRosolver(해석기)는 .jsp로 바인딩되는 역할을 합니다, 그래서 ↑도 사용하고 아래 JsonView도 동시에 사용해야합니다 -->
	
	<!-- BeanNameViewResolver 설정추가 컨트롤러의 view이름을 파일명이 아닌 빈으로 리턴받을 수 있음.  -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	  <beans:property name="order" value="1" />
	</beans:bean>
	<!-- MappingJackson2JsonView 설정추가 // 2010년 스프링 초창기 부터 사용했던 RestAPI구현방식입니다. // 컨트롤러에서 받는 값을 아래 빈의 id로 지정합니다-->
	<!-- jsp에서 return값으로 사용함 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	
	<context:component-scan base-package="com.edu.controller" />
	<context:component-scan base-package="com.edu.util" />
	
	<!-- AOP proxy 저장소 추가 & AOP 기본설정 내용 자동추가됨-->	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<aop:config></aop:config>
		
	<!-- CRUD에서 multipart를 사용한다면, 리졸브(resolve-해석기) 스프링빈이 필요 -->
	<!-- commons.fileupload.~외부모듈이 필요합니다. 업로드용량을 10메가로 제한 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	
</beans:beans>
